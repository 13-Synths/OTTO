<?xml version='1.0' encoding='utf-8'?>
<structtemplate abstract="true" id="top1::ByteFile::bytes" name="bytes" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <templatenontypeparameter id="top1::ByteFile::bytes::len" name="len">
    <type name="std::size_t" />
  </templatenontypeparameter>
  <field id="top1::ByteFile::bytes::data" name="data">
    <type name="std::byte [len]" />
  </field>
  <constructor abstract="yes" id="top1::ByteFile::bytes::bytes&lt;len&gt;" name="bytes&lt;len&gt;" />
  <constructor id="top1::ByteFile::bytes::bytes&lt;len&gt;" name="bytes&lt;len&gt;">
    <argument id="top1::ByteFile::bytes::bytes&lt;len&gt;::o" name="o">
      <type name="bytes" qualifier=" &amp;" ref="top1::ByteFile::bytes#top1::ByteFile::bytes" />
    </argument>
  </constructor>
  <constructor id="top1::ByteFile::bytes::bytes&lt;len&gt;" name="bytes&lt;len&gt;">
    <argument id="top1::ByteFile::bytes::bytes&lt;len&gt;::bs" name="bs">
      <type name="std::initializer_list&lt;std::byte&gt;" qualifier=" const" />
    </argument>
  </constructor>
  <constructor id="top1::ByteFile::bytes::bytes&lt;len&gt;" name="bytes&lt;len&gt;">
    <argument id="top1::ByteFile::bytes::bytes&lt;len&gt;::bs" name="bs">
      <type name="std::initializer_list&lt;unsigned char&gt;" qualifier=" const" />
    </argument>
  </constructor>
  <constructor id="top1::ByteFile::bytes::bytes&lt;len&gt;" name="bytes&lt;len&gt;">
    <argument id="top1::ByteFile::bytes::bytes&lt;len&gt;::str" name="str">
      <type name="const char [len + 1]" />
    </argument>
  </constructor>
  <methodtemplate id="top1::ByteFile::bytes::bytes&lt;len&gt;" name="bytes&lt;len&gt;">
    <undocumented-return />
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="top1::ByteFile::bytes::bytes&lt;len&gt;::d" name="d">
      <type name="Num" />
    </argument>
    <templatenontypeparameter id="top1::ByteFile::bytes::bytes&lt;len&gt;::N" name="N">
      <type name="std::size_t" />
    </templatenontypeparameter>
    <templatetypeparameter id="top1::ByteFile::bytes::bytes&lt;len&gt;::Num" name="Num" />
  </methodtemplate>
  <method id="top1::ByteFile::bytes::begin" name="begin">
    <undocumented-return />
    <return>
      <type name="std::byte" qualifier="*" />
    </return>
  </method>
  <method id="top1::ByteFile::bytes::end" name="end">
    <undocumented-return />
    <return>
      <type name="std::byte" qualifier="*" />
    </return>
  </method>
  <method id="top1::ByteFile::bytes::begin" name="begin">
    <undocumented-return />
    <return>
      <type name="std::byte" qualifier=" const *" />
    </return>
  </method>
  <method id="top1::ByteFile::bytes::end" name="end">
    <undocumented-return />
    <return>
      <type name="std::byte" qualifier=" const *" />
    </return>
  </method>
  <method id="top1::ByteFile::bytes::operator==" name="operator==">
    <undocumented-return />
    <return>
      <type builtin="yes" name="bool" />
    </return>
    <argument id="top1::ByteFile::bytes::operator==::rhs" name="rhs">
      <type name="bytes" qualifier=" const &amp;" ref="top1::ByteFile::bytes#top1::ByteFile::bytes" />
    </argument>
  </method>
  <method id="top1::ByteFile::bytes::operator==" name="operator==">
    <undocumented-return />
    <return>
      <type builtin="yes" name="bool" />
    </return>
    <argument id="top1::ByteFile::bytes::operator==::rhs" name="rhs">
      <type builtin="yes" name="char" qualifier=" const *" />
    </argument>
  </method>
  <method id="top1::ByteFile::bytes::operator!=" name="operator!=">
    <undocumented-return />
    <return>
      <type builtin="yes" name="bool" />
    </return>
    <argument id="top1::ByteFile::bytes::operator!=::rhs" name="rhs">
      <type name="bytes" qualifier=" const &amp;" ref="top1::ByteFile::bytes#top1::ByteFile::bytes" />
    </argument>
  </method>
  <method id="top1::ByteFile::bytes::operator!=" name="operator!=">
    <undocumented-return />
    <return>
      <type builtin="yes" name="bool" />
    </return>
    <argument id="top1::ByteFile::bytes::operator!=::rhs" name="rhs">
      <type builtin="yes" name="char" qualifier=" const *" />
    </argument>
  </method>
  <methodtemplate id="top1::ByteFile::bytes::cast" name="cast">
    <undocumented-return />
    <return>
      <type name="T" qualifier=" &amp;" />
    </return>
    <templatetypeparameter id="top1::ByteFile::bytes::cast::T" name="T" />
  </methodtemplate>
  <methodtemplate id="top1::ByteFile::bytes::as_i" name="as_i">
    <undocumented-return />
    <return>
      <type name="Num" qualifier=" &amp;" />
    </return>
    <templatenontypeparameter id="top1::ByteFile::bytes::as_i::N" name="N">
      <type name="std::size_t" />
    </templatenontypeparameter>
    <templatetypeparameter id="top1::ByteFile::bytes::as_i::Num" name="Num" />
  </methodtemplate>
  <methodtemplate id="top1::ByteFile::bytes::as_u" name="as_u">
    <undocumented-return />
    <return>
      <type name="Num" qualifier=" &amp;" />
    </return>
    <templatenontypeparameter id="top1::ByteFile::bytes::as_u::N" name="N">
      <type name="std::size_t" />
    </templatenontypeparameter>
    <templatetypeparameter id="top1::ByteFile::bytes::as_u::Num" name="Num" />
  </methodtemplate>
  <conversionfunction id="top1::ByteFile::bytes::operator char *" name="operator char *">
    <undocumented-return />
    <return>
      <type builtin="yes" name="char" qualifier="*" />
    </return>
  </conversionfunction>
</structtemplate>
