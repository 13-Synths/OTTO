<?xml version='1.0' encoding='utf-8'?>
<class abstract="true" id="top1::File::Chunk" name="Chunk" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <subclass access="public" name="TapeFile::TOP1Chunk" ref="top1::TapeFile::TOP1Chunk#top1::TapeFile::TOP1Chunk" />
  <subclass access="protected" name="BasicSndFile::WavHeader" ref="top1::BasicSndFile::WavHeader#top1::BasicSndFile::WavHeader" />
  <subclass access="public" name="TapeFile::SlicesChunk" ref="top1::TapeFile::SlicesChunk#top1::TapeFile::SlicesChunk" />
  <subclass access="protected" name="BasicSndFile::WavFmt" ref="top1::BasicSndFile::WavFmt#top1::BasicSndFile::WavFmt" />
  <subclass access="public" name="TapeFile::TrackSlicesChunk" ref="top1::TapeFile::TrackSlicesChunk#top1::TapeFile::TrackSlicesChunk" />
  <subclass access="protected" name="BasicSndFile::AudioChunk" ref="top1::BasicSndFile::AudioChunk#top1::BasicSndFile::AudioChunk" />
  <methodtemplate id="top1::File::Chunk::addField" name="addField">
    <undocumented-return />
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="top1::File::Chunk::addField::field" name="field">
      <type name="T" qualifier=" &amp;" />
    </argument>
    <templatetypeparameter id="top1::File::Chunk::addField::T" name="T" />
    <templatetypeparameter id="top1::File::Chunk::addField::T" name="T" />
  </methodtemplate>
  <field id="top1::File::Chunk::id" name="id">
    <type name="ChunkFCC" qualifier=" const" ref="top1::File::ChunkFCC#top1::File::ChunkFCC" />
  </field>
  <field id="top1::File::Chunk::size" name="size">
    <type name="u4b" />
  </field>
  <field id="top1::File::Chunk::offset" name="offset">
    <type builtin="yes" name="int" />
  </field>
  <constructor id="top1::File::Chunk::Chunk" name="Chunk" />
  <constructor id="top1::File::Chunk::Chunk" name="Chunk">
    <argument id="top1::File::Chunk::Chunk::id" name="id">
      <type name="ChunkFCC" ref="top1::File::ChunkFCC#top1::File::ChunkFCC" />
    </argument>
  </constructor>
  <method abstract="yes" id="top1::File::Chunk::read" name="read" virtual="yes">
    <undocumented-return />
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="top1::File::Chunk::read::file" name="file">
      <type name="File" qualifier="*" ref="top1::File#top1::File" />
    </argument>
  </method>
  <method id="top1::File::Chunk::subChunk" name="subChunk">
    <undocumented-return />
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="top1::File::Chunk::subChunk::subChunk" name="subChunk">
      <type name="Chunk" qualifier=" &amp;" ref="top1::File::Chunk#top1::File::Chunk" />
    </argument>
  </method>
  <method abstract="yes" id="top1::File::Chunk::write" name="write" virtual="yes">
    <undocumented-return />
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="top1::File::Chunk::write::file" name="file">
      <type name="File" qualifier="*" ref="top1::File#top1::File" />
    </argument>
  </method>
  <field access="protected" id="top1::File::Chunk::fields" name="fields">
    <type name="std::vector&lt;top1::File::Field *, std::allocator&lt;top1::File::Field *&gt; &gt;" />
  </field>
  <field access="protected" id="top1::File::Chunk::chunks" name="chunks">
    <type name="std::vector&lt;top1::File::Chunk *, std::allocator&lt;top1::File::Chunk *&gt; &gt;" />
  </field>
</class>
