<?xml version='1.0' encoding='utf-8'?>
<class abstract="true" id="top1::File" name="File" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <subclass access="public" name="BasicSndFile" ref="top1::BasicSndFile#top1::BasicSndFile" />
  <methodtemplate id="top1::File::readBytes" name="readBytes">
    <undocumented-return />
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="top1::File::readBytes::ptr" name="ptr">
      <type name="T" qualifier="*" />
    </argument>
    <argument id="top1::File::readBytes::length" name="length">
      <type builtin="yes" name="int" />
    </argument>
    <templatetypeparameter id="top1::File::readBytes::T" name="T" />
    <templatetypeparameter id="top1::File::readBytes::T" name="T" />
  </methodtemplate>
  <methodtemplate id="top1::File::readBytes" name="readBytes">
    <undocumented-return />
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="top1::File::readBytes::bytes" name="bytes">
      <type name="T" qualifier=" &amp;" />
    </argument>
    <templatetypeparameter id="top1::File::readBytes::T" name="T" />
    <templatetypeparameter id="top1::File::readBytes::T" name="T" />
  </methodtemplate>
  <methodtemplate id="top1::File::readBytes" name="readBytes">
    <undocumented-return />
    <return>
      <type name="T" />
    </return>
    <templatetypeparameter id="top1::File::readBytes::T" name="T" />
    <templatetypeparameter id="top1::File::readBytes::T" name="T" />
  </methodtemplate>
  <methodtemplate id="top1::File::writeBytes" name="writeBytes">
    <undocumented-return />
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="top1::File::writeBytes::ptr" name="ptr">
      <type name="T" qualifier="*" />
    </argument>
    <argument id="top1::File::writeBytes::length" name="length">
      <type builtin="yes" name="int" />
    </argument>
    <templatetypeparameter id="top1::File::writeBytes::T" name="T" />
    <templatetypeparameter id="top1::File::writeBytes::T" name="T" />
  </methodtemplate>
  <methodtemplate id="top1::File::writeBytes" name="writeBytes">
    <undocumented-return />
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="top1::File::writeBytes::bytes" name="bytes">
      <type name="T" qualifier=" &amp;" />
    </argument>
    <templatetypeparameter id="top1::File::writeBytes::T" name="T" />
    <templatetypeparameter id="top1::File::writeBytes::T" name="T" />
  </methodtemplate>
  <class name="Chunk" ref="top1::File::Chunk#top1::File::Chunk" />
  <struct name="ChunkFCC" ref="top1::File::ChunkFCC#top1::File::ChunkFCC" />
  <struct name="Error" ref="top1::File::Error#top1::File::Error" />
  <struct name="Field" ref="top1::File::Field#top1::File::Field" />
  <field id="top1::File::mutex" name="mutex">
    <type name="std::recursive_mutex" />
  </field>
  <field id="top1::File::path" name="path">
    <type name="std::string" />
  </field>
  <field id="top1::File::error" name="error">
    <type name="Error" ref="top1::File::Error#top1::File::Error" />
  </field>
  <constructor id="top1::File::File" name="File" />
  <constructor id="top1::File::File" name="File">
    <argument id="top1::File::File::path" name="path">
      <type name="std::string" qualifier=" const &amp;" />
    </argument>
  </constructor>
  <constructor abstract="yes" id="top1::File::File" name="File">
    <argument id="top1::File::File::" name="">
      <type name="File" qualifier=" &amp;" ref="top1::File#top1::File" />
    </argument>
  </constructor>
  <constructor abstract="yes" id="top1::File::File" name="File">
    <argument id="top1::File::File::" name="">
      <type name="File &amp;&amp;" />
    </argument>
  </constructor>
  <destructor id="top1::File::~File" name="~File" virtual="yes" />
  <method abstract="yes" id="top1::File::close" name="close" virtual="yes">
    <undocumented-return />
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method abstract="yes" id="top1::File::flush" name="flush" virtual="yes">
    <undocumented-return />
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method abstract="yes" id="top1::File::fseek" name="fseek">
    <undocumented-return />
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="top1::File::fseek::pos" name="pos">
      <type name="uint" />
    </argument>
  </method>
  <method abstract="yes" id="top1::File::getChunk" name="getChunk">
    <undocumented-return />
    <return>
      <type name="Chunk" ref="top1::File::Chunk#top1::File::Chunk" />
    </return>
  </method>
  <method abstract="yes" id="top1::File::open" name="open" virtual="yes">
    <undocumented-return />
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="top1::File::open::path" name="path">
      <type name="std::string" qualifier=" const &amp;" />
    </argument>
  </method>
  <method abstract="yes" id="top1::File::readChunks" name="readChunks">
    <undocumented-return />
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method abstract="yes" id="top1::File::readFile" name="readFile" virtual="yes">
    <undocumented-return />
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method id="top1::File::rpos" name="rpos">
    <undocumented-return />
    <return>
      <type name="uint" />
    </return>
  </method>
  <method abstract="yes" id="top1::File::skipChunkR" name="skipChunkR">
    <undocumented-return />
    <return>
      <type builtin="yes" name="bool" />
    </return>
    <argument id="top1::File::skipChunkR::chunk" name="chunk">
      <type name="Chunk" qualifier=" &amp;" ref="top1::File::Chunk#top1::File::Chunk" />
    </argument>
  </method>
  <method abstract="yes" id="top1::File::skipChunkW" name="skipChunkW">
    <undocumented-return />
    <return>
      <type builtin="yes" name="bool" />
    </return>
    <argument id="top1::File::skipChunkW::chunk" name="chunk">
      <type name="Chunk" qualifier=" &amp;" ref="top1::File::Chunk#top1::File::Chunk" />
    </argument>
  </method>
  <method id="top1::File::wpos" name="wpos">
    <undocumented-return />
    <return>
      <type name="uint" />
    </return>
  </method>
  <method abstract="yes" id="top1::File::writeChunks" name="writeChunks">
    <undocumented-return />
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <method abstract="yes" id="top1::File::writeFile" name="writeFile" virtual="yes">
    <undocumented-return />
    <return>
      <type builtin="yes" name="void" />
    </return>
  </method>
  <field access="protected" id="top1::File::fileStream" name="fileStream">
    <type name="std::fstream" />
  </field>
  <field access="protected" id="top1::File::chunks" name="chunks">
    <type name="std::vector&lt;top1::File::Chunk *, std::allocator&lt;top1::File::Chunk *&gt; &gt;" />
  </field>
  <method abstract="yes" access="protected" id="top1::File::addChunk" name="addChunk">
    <undocumented-return />
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="top1::File::addChunk::chunk" name="chunk">
      <type name="Chunk" qualifier=" &amp;" ref="top1::File::Chunk#top1::File::Chunk" />
    </argument>
  </method>
</class>
